{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-07T10:28:44.306Z",
  "id": "i3FmNoHnNDlswLON",
  "meta": null,
  "name": "Git_backUP",
  "nodes": [
    {
      "parameters": {},
      "id": "6dc3a906-83ad-4986-bcb7-fa0508ea31b8",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        495,
        675
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "ff830ab6-9315-478a-9643-fd094b8b6ed4",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        1340,
        640
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "KWMCzM78txNg7PUI",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "8a34d6be-2479-4dba-9e33-3726f60cb4de",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1980,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6c15043c-33e0-492a-bf8f-c80c0a53b08c",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2260,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d7a5c6b2-303f-45d1-b7fd-0690af020dbd",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2220,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6d0cc6cb-ea78-48f9-bea5-0e2ad60f5dae",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2160,
        980
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "132d4d20-4137-42ea-b768-9334f8e34998",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        2400,
        780
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "KWMCzM78txNg7PUI",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "c03c7c77-3b47-4b4f-b313-a4161afb1706",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        2400,
        980
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "KWMCzM78txNg7PUI",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "makees-by"
            },
            {
              "name": "repo.name",
              "value": "n8n_ru"
            },
            {
              "name": "repo.path",
              "value": "workflow"
            }
          ]
        },
        "options": {}
      },
      "id": "41152016-abbf-4cf0-b065-b41944c20945",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        680,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 16,
              "minute": 20
            }
          ]
        }
      },
      "id": "006e9b22-871d-4538-be21-03b1e84a47a7",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        500,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 555.8582472097631,
        "width": 389.78906250000017
      },
      "id": "025f1af1-b6be-4785-97bd-cf7ce2897027",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        40,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "bc62a9d7-3b1f-40ff-b120-48f0fcad30cd",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1080,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "a3188f90-c261-418d-b505-45f3b0d664e9",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1940,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {}
      },
      "id": "2f30eed9-32a7-4f32-b630-ae595e2b3602",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        880,
        820
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "ljqyGz1ViGL1ZpSU",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "57fa57bd-25d2-4128-8539-d1015791d55e",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1740,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "5a27deb0-f5e3-43ef-9f3e-9870dbb5a68f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1560,
        780
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "amount": 10,
        "unit": "seconds"
      },
      "id": "f423dc70-e38d-45d6-9ddb-dac040a37fea",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        860,
        620
      ],
      "webhookId": "0e05878d-e587-4b11-b9b9-330c29a42267"
    },
    {
      "parameters": {},
      "id": "d9be244b-66cc-4baa-afa0-df1bfb745106",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1340,
        980
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "e7e51ed6-74b8-4d51-aeed-fba35e98fadd",
      "name": "OneAtATime1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "fec36749-c211-4c5b-a5ac-19d5647fe898",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 2,
      "position": [
        1100,
        820
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "9xZXC0dhBMS34gPe"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-07T10:28:39.280Z",
      "updatedAt": "2024-01-07T10:28:39.280Z",
      "id": "MW7uwFYrKhErbgG6",
      "name": "git"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-14T12:15:38.000Z",
  "versionId": "27fa1890-7735-471f-a519-ca803cb4eccf"
}